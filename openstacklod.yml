heat_template_version: 2016-04-08
parameters:
  key_name:
    type: string
    default: atmecs-demo-labs
    description: default-key
  flavor:
    type: string
    description: Instance type for the instance to be created
    default: m1.medium
    constraints:
      - allowed_values: [m1.nano, m1.tiny, m1.small, m1.medium, m1.large]
        description: Value must be one of 'm1.tiny', 'm1.small' or 'm1.large'
  image:
    type: string
    default: cirros
    description: ID or name of the image to use for the instance
  private_net_id:
    type: string
    default: 6bbf378e-f75d-410e-844e-210c2d37b419
    description: Private network id
  private_subnet_id:
    type: string
    default: 760a1f4e-7dd8-4fcf-82bf-7778e20695fc
    description: Private subnet id
  public_net_id:
    type: string
    description: Public network id
    default: 8f9a4341-1f12-4148-86ee-24a948c9f44c

resources:
  instance1:
    type: OS::Nova::Server
    properties:
      name: HR-Portal
      image: HR-NEW
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: instance1_port0 }
  instance2:
    type: OS::Nova::Server
    properties:
      name: Finance-Portal
      image: Finance
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: instance2_port0 } 
  instance3:
    type: OS::Nova::Server
    properties:
      name: Inventory-Portal
      image: Inventory
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: instance3_port0 }
  instance4:
    type: OS::Nova::Server
    properties:
      name: HR-Windows
      image: Windows10
      flavor: m1.large
      #key_name: { get_param: key_name }
      networks:
        - port: { get_resource: instance4_port0 }
  
  instance5:
    type: OS::Nova::Server
    properties:
      name: Central-Management-Server
      image: Central-Management-Server
      flavor: m1.large
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: instance5_port0 }

  instance1_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      security_groups:
        - default
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
  instance1_public:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: instance1_port0 }

  instance2_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      security_groups:
        - default
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
  instance2_public:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: instance2_port0 } 
  instance3_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      security_groups:
        - default
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
  instance3_public:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: instance3_port0 } 
  instance4_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      security_groups:
        - default
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
  instance4_public:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: instance4_port0 } 
  instance5_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      security_groups:
        - default
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
  instance5_public:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: instance5_port0 } 

outputs:
  instance1_private_ip:
    description: IP address of instance1 in private network
    value: { get_attr: [ instance1, first_address ] }
  instance1_public_ip:
    description: Floating IP address of instance1 in public network
    value: { get_attr: [ instance1_public, floating_ip_address ] }
  vnc_console_url:
    value:
      get_attr: [instance1, console_urls, novnc]
